plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
}

// Create a variable called keystorePropertiesFile and initialize it to your keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    testBuildType "staging"

    signingConfigs {
        release {
            storeFile file('/Users/victorude/aspiration.release.key')
            storePassword 'AspirationFixer'
            keyAlias 'key0'
            keyPassword 'AspirationFixer'
        }
    }
    compileSdk 32

    defaultConfig {
        applicationId "com.victorude.currencyexchange"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        // Specifies the application ID for the test APK.
        testApplicationId = 'com.test.victorude'

        // Specifies the fully-qualified class name of the test instrumentation
        // runner.
        testInstrumentationRunner "com.victorude.currencyexchange.common.HiltTestRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

        // If set to true, enables the instrumentation class to start and stop profiling.
        // If set to false (default), profiling occurs the entire time the instrumentation
        // class is running.
        testHandleProfiling = true

        // If set to true, indicates that the Android system should run the instrumentation
        // class as a functional test. The default value is false.
        testFunctionalTest = true

        testOptions {
            execution 'ANDROIDX_TEST_ORCHESTRATOR'
        }

        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.release
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            ext.keystoreProperties = keystoreProperties
            apply from: '../buildConfig/release.gradle', to: it
        }
        staging {
            initWith release
            minifyEnabled false
            shrinkResources false
            debuggable true

            ext.keystoreProperties = keystoreProperties
            apply from: '../buildConfig/staging.gradle', to: it
        }
        debug {
            minifyEnabled true

            ext.keystoreProperties = keystoreProperties
            apply from: '../buildConfig/debug.gradle', to: it
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {

    // Test dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.3'

    // Test rules and transitive dependencies:
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    // Needed for createComposeRule, but not createAndroidComposeRule:
    androidTestImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    // orchestrator
    androidTestImplementation 'androidx.test:orchestrator:1.4.1'

    // Hilt testing
    // ...with Kotlin.
    kaptTest "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"

    // For instrumented tests.
    androidTestImplementation "com.google.dagger:hilt-android-testing:$rootProject.hiltVersion"
    // ...with Kotlin.
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"
    androidTestImplementation 'androidx.test:runner:1.5.0-alpha04'

    // Assertion from https://truth.dev/
    androidTestImplementation "com.google.truth:truth:$rootProject.truthVersion"

    // App dependencies
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha13'
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1'
    implementation 'androidx.navigation:navigation-compose:2.4.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3'

    // Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$rootProject.hiltVersion"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
}